AWSTemplateFormatVersion: '2010-09-09'
Parameters:

  DestinationAccount:
    Type: String

  DestinationPrefix:
    Type: String
    Default: workshop

  StackPrefix:
    Type: String
    Default: stacklet

  IAMRegion:
    Type: String
    Default: us-east-1

Conditions:
  "CreateIAMResource": !Equals
    - !Ref AWS::Region
    - !Ref IAMRegion
  "TargetSelfAgg": !Equals
    - !Ref AWS::AccountId
    - !Ref DestinationAccount

Resources:
  ExecutionRole:
    Type: "AWS::IAM::Role"
    Condition: CreateIAMResource
    Properties:
      RoleName: !Sub "${StackPrefix}-remediation"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              AWS: !Sub "arn:aws:iam::${DestinationAccount}:role/${DestinationPrefix}-stacklet-execution"
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/ReadOnlyAccess"
      Policies:
        - PolicyName: AllowSQS
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "sqs:SendMessage"
                Resource: !Sub "arn:aws:sqs:*:${DestinationAccount}:*"
        - PolicyName: AllowKMS
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ["kms:Decrypt", "kms:GenerateDataKey"]
                Resource: !Sub "arn:aws:kms:*:${DestinationAccount}:*"

  CrossAccountTaggingPolicy:
    DependsOn: ExecutionRole
    Condition: CreateIAMResource
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${StackPrefix}-cross-account-tagging"
      Roles: 
        - !Ref ExecutionRole
      PolicyDocument:
        Statement:
          - Sid: TagFullAccess
            Effect: Allow
            Action:
              - acm:*Tag*
              - apigateway:*Tag*
              - autoscaling:*Tag*
              - backup:*Tag*
              - backup:*Untag*
              - batch:*Tag*
              - batch:*Untag*
              - clouddirectory:*Tag*
              - clouddirectory:*Untag*
              - cloudformation:*Tag*
              - cloudformation:*Untag*
              - cloudfront:*Tag*
              - cloudfront:*Untag*
              - cloudhsm:*Tag*
              - cloudhsm:*Untag*
              - cloudsearch:*Tag*
              - cloudtrail:*Tag*
              - cloudwatch:*Tag*
              - cloudwatch:*Untag*
              - codeartifact:*Tag*
              - codeartifact:*Untag*
              - codebuild:*Tag*
              - codebuild:*Untag*
              - codecommit:*Tag*
              - codecommit:*Untag*
              - codepipeline:*Tag*
              - codepipeline:*Untag*
              - cognito-identity:*Tag*
              - cognito-identity:*Untag*
              - cognito-idp:*Tag*
              - cognito-idp:*Untag*
              - config:*Tag*
              - config:*Untag*
              - datapipeline:*Tag*
              - dax:*Tag*
              - dax:*Untag*
              - dax:TagResource
              - dax:UntagResource
              - directconnect:*Tag*
              - directconnect:*Untag*
              - dlm:*Tag*
              - dlm:*Untag*
              - dms:*Tag*
              - ds:*Tag*
              - dynamodb:*Tag*
              - dynamodb:*Untag*
              - ec2:*Tag*
              - ecr:*Tag*
              - ecr:*Untag*
              - ecs:*Tag*
              - ecs:*Untag*
              - eks:*Tag*
              - eks:*Untag*
              - elasticache:*Tag*
              - elasticbeanstalk:*Tag*
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
              - es:*Tag*
              - events:*Tag*
              - events:*Untag*
              - firehose:*Tag*
              - firehose:*Untag*
              - gamelift:*Tag*
              - gamelift:*Untag*
              - glacier:*Tag*
              - glue:*Tag*
              - glue:*Untag*
              - health:*Tag*
              - iam:*Tag*
              - iam:*Untag*
              - iot:*Tag*
              - iot:*Untag*
              - kafka:*Tag*
              - kafka:*Untag*
              - kinesis:*Tag*
              - kinesisanalytics:*Tag*
              - kinesisanalytics:*Untag*
              - kms:*Tag*
              - kms:*Untag*
              - lambda:*Tag*
              - lambda:*Untag*
              - lightsail:*Untag*
              - logs:*Tag*
              - logs:*Untag*
              - machinelearning:*Tag*
              - mq:*Tag*
              - opsworks-cm:TagResource
              - opsworks-cm:UntagResource
              - opsworks:*Tag*
              - opsworks:*Untag*
              - qldb:*Tag*
              - qldb:*Untag*
              - rds:*Tag*
              - redshift:*Tag*
              - route53:*Tag*
              - route53domains:*Tag*
              - s3:*Tag*
              - sdb:DomainMetadata
              - sdb:GetAttributes
              - sdb:Select
              - secretsmanager:*Tag*
              - secretsmanager:*Untag*
              - servicecatalog:*Tag*
              - servicecatalog:*Untag*
              - shield:*Tag*
              - shield:*Untag*
              - sns:*Tag*
              - sns:*Untag*
              - sqs:*Tag*
              - sqs:*Untag*
              - storagegateway:*Tag*
              - waf-regional:*Tag*
              - waf-regional:*Untag*
              - waf:*Tag*
              - waf:*Untag*
              - workspaces:*Tag*
              - lightsail:*Tag*
            Resource: '*'

  AutoRemediationPolicy:
    DependsOn: ExecutionRole
    Condition: CreateIAMResource
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${StackPrefix}-cross-account-autoremediation"
      Roles: 
        - !Ref ExecutionRole
      PolicyDocument:
        Statement:
        - Action:
          - rds:ModifyDBInstance
          Resource: "*"
          Effect: Allow
          Sid: RDSChangePort
        - Action:
          - elasticloadbalancing:ModifyLoadBalancerAttributes
          Resource: "*"
          Effect: Allow
          Sid: AppELBChangeAttributes
        - Action:
          - elasticfilesystem:DescribeMountTargets
          - elasticfilesystem:DeleteMountTarget
          - elasticfilesystem:DeleteFileSystem
          Resource: "*"
          Effect: Allow
          Sid: EFSCleanUp
        - Action:
          - rds:DeleteDBInstance
          - rds:AddTagsToResource
          Resource: "*"
          Effect: Allow
          Sid: SetECRLifecycle

Outputs:
  ExecutionRoleArn:
    Description: "Stacklet Execution Role Arn"
    Value: !GetAtt ExecutionRole.Arn
    Condition: CreateIAMResource
